/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package FormImport;

import DAO.LoaiDAO;
import DAO.SanPhamDAO;
import Entity.Loai;
import Entity.SanPham;
import JavaSwingThuVien.MyQuery;
import JavaSwingThuVien.Product2;
import JavaSwingThuVien.TheModel;
import ThuVien.DialogHelper;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author nguyenvanquyet
 */
public class addProduct extends javax.swing.JDialog {

    /**
     * Creates new form addProduct
     */
    int row = -1;
    SanPhamDAO daosp = new SanPhamDAO();
    LoaiDAO daoloai = new LoaiDAO();
    JFileChooser fileChooser = new JFileChooser("H:\\MonDuAnMau\\BaiTap\\DuAnCoffee\\src\\main\\java\\ImageProduct");

    public addProduct() {
        initComponents();
        setLocationRelativeTo(this);
        filltable();
        //  filltable();
        //     fillcomboboxLoai();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtmaSanPham = new JavaSwingThuVien.TextField();
        txtGia = new JavaSwingThuVien.TextField();
        txttenSP = new JavaSwingThuVien.TextField();
        lblhinhAnh = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtmoTa = new javax.swing.JTextArea();
        txtmaloai = new JavaSwingThuVien.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSP = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        btnSua = new JavaSwingThuVien.MyButton();
        btnXoa = new JavaSwingThuVien.MyButton();
        btnThem = new JavaSwingThuVien.MyButton();
        btnMoi = new JavaSwingThuVien.MyButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(176, 166, 149));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thêm sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        txtmaSanPham.setCaretColor(new java.awt.Color(255, 255, 255));
        txtmaSanPham.setLabelText("Mã sản phẩm");
        txtmaSanPham.setLineColor(new java.awt.Color(102, 204, 255));
        txtmaSanPham.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        txtmaSanPham.setSelectionColor(new java.awt.Color(255, 255, 255));

        txtGia.setLabelText("Giá");
        txtGia.setSelectedTextColor(new java.awt.Color(0, 0, 0));

        txttenSP.setLabelText("Tên sản phẩm");
        txttenSP.setSelectedTextColor(new java.awt.Color(0, 0, 0));

        lblhinhAnh.setBackground(new java.awt.Color(255, 255, 255));
        lblhinhAnh.setBorder(javax.swing.BorderFactory.createTitledBorder("Hình ảnh"));
        lblhinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblhinhAnhMouseClicked(evt);
            }
        });

        txtmoTa.setColumns(20);
        txtmoTa.setRows(5);
        txtmoTa.setBorder(javax.swing.BorderFactory.createTitledBorder("Mô tả"));
        jScrollPane4.setViewportView(txtmoTa);

        txtmaloai.setLabelText("Mã Loại");
        txtmaloai.setSelectedTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtmaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblhinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txttenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmaloai, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(txtmaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblhinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txttenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmaloai, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        TableSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableSPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableSP);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnSua.setRadius(20);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnXoa.setRadius(20);

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Insert.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnThem.setRadius(20);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/New.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnMoi.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnMoi.setRadius(20);
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableSPMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = TableSP.getSelectedRow();
            this.edit();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_TableSPMouseClicked

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        txtGia.setText("");
        // txtmaLoai.setText("");
        txtmaSanPham.setText("");
        txtmoTa.setText("");
        txttenSP.setText("");
        lblhinhAnh.setIcon(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        Insert();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemActionPerformed

    private void lblhinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblhinhAnhMouseClicked
        chonAnh();
        // TODO add your handling code here:
    }//GEN-LAST:event_lblhinhAnhMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        UpdateSanPham();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                addProduct dialog = new addProduct();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableSP;
    private JavaSwingThuVien.MyButton btnMoi;
    private JavaSwingThuVien.MyButton btnSua;
    private JavaSwingThuVien.MyButton btnThem;
    private JavaSwingThuVien.MyButton btnXoa;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblhinhAnh;
    private JavaSwingThuVien.TextField txtGia;
    private JavaSwingThuVien.TextField txtmaSanPham;
    private JavaSwingThuVien.TextField txtmaloai;
    private javax.swing.JTextArea txtmoTa;
    private JavaSwingThuVien.TextField txttenSP;
    // End of variables declaration//GEN-END:variables

    public void UpdateSanPham() {
        SanPham sp = getForm();
        try {
            daosp.update(sp);
            DialogHelper.alert(this, "Chỉnh sữa thành công");
            filltable();

        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi chỉnh sữa");
        }

    }

    public void setForm(SanPham sp) {
//        String hinhanh = lblhinhAnh.getToolTipText();
//        byte[] hinhanh1 = hinhanh.getBytes();
        txtmaSanPham.setText(sp.getMaSP());
        txttenSP.setText(sp.getTenSP());
        txtGia.setText(String.valueOf(sp.getGia()));
        txtmaloai.setText(sp.getMaLoai());
        txtmoTa.setText(sp.getMoTa());
        txttenSP.setText(sp.getTenSP());
        ImageIcon imageIcon = new ImageIcon(sp.getHinhanh());
        lblhinhAnh.setIcon(imageIcon);
    }

    private static byte[] convertIconToByteArray(Icon icon) {
        BufferedImage image = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
        Graphics g = image.createGraphics();
        icon.paintIcon(null, g, 0, 0);
        g.dispose();
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try {
            ImageIO.write(image, "png", baos);
        } catch (IOException e) {
            System.out.println(e);
        }
        return baos.toByteArray();
    }

    public SanPham getForm() {
        SanPham sp = new SanPham();
//        String hinhanh = lblhinhAnh.getToolTipText();
//        byte[] hinhanh1 = hinhanh.getBytes();
//        if (hinhanh != null) {
//            sp.setHinhanh(hinhanh1);
//        }

        sp.setMaSP(txtmaSanPham.getText());
        sp.setTenSP(txttenSP.getText());
        sp.setGia(Float.parseFloat(txtGia.getText()));
        sp.setMoTa(txtmoTa.getText());
        sp.setMaLoai(txtmaloai.getText());
        Icon icon = lblhinhAnh.getIcon();
        byte[] imageBytes = convertIconToByteArray(lblhinhAnh.getIcon());
        sp.setHinhanh(imageBytes);
        System.out.println(icon);
        System.out.println("chạy tới");
        System.out.println("chạy tới icon");
        System.out.println(imageBytes);
        // Kiểm tra xem Icon có phải là ImageIcon không
//        if (icon instanceof ImageIcon) {
//            // Chuyển đổi ImageIcon thành mảng byte
//            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
//            try {
//                BufferedImage bufferedImage = new BufferedImage(
//                        icon.getIconWidth(),
//                        icon.getIconHeight(),
//                        BufferedImage.TYPE_INT_ARGB
//                );
//                Graphics g = bufferedImage.getGraphics();
//                icon.paintIcon(null, g, 0, 0);
//                g.dispose();
//
//                // Write the image data to the ByteArrayOutputStream
//                ImageIO.write(bufferedImage, "png", byteArrayOutputStream);
//            } catch (IOException e) {
//                DialogHelper.alert(this, "Lỗi ");
//                System.out.println(e);
//            }
//            byte[] imageData = byteArrayOutputStream.toByteArray();
//            // Đặt mảng byte vào đối tượng SanPham
//            sp.setHinhanh(imageData);
//        }

        return sp;
    }

    public void edit() {
        try {
            String maSP = (String) TableSP.getValueAt(this.row, 0);
            SanPham sp = daosp.selectById(maSP);
            if (sp != null) {
                this.setForm(sp);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

//    void filltable() {
//        try {
//            SanPhamDAO sp = new SanPhamDAO();
//            ArrayList<SanPham> list = sp.BindTable();
//            String[] columnName = {"MaSP", "TenSP", "Gia", "MaLoai", "MoTa", "HinhAnh"};
//            Object[][] rows = new Object[list.size()][6];
//            for (int i = 0; i < list.size(); i++) {
//                rows[i][0] = list.get(i).getMaSP();
//                rows[i][1] = list.get(i).getTenSP();
//                rows[i][2] = list.get(i).getGia();
//                rows[i][3] = list.get(i).getMaLoai();
//                rows[i][4] = list.get(i).getMoTa();
//                if (list.get(i).getHinhanh() != null) {
//                    ImageIcon image = new ImageIcon(new ImageIcon(list.get(i).getHinhanh()).getImage()
//                            .getScaledInstance(150, 120, Image.SCALE_SMOOTH));
//                    System.out.println(list.get(i).getHinhanh().toString());
//                    rows[i][5] = image;
//                } else {
//                    rows[i][5] = null;
//                }
//                //    rows[i][5] = list.get(i).getCatID();
//            }
//            TheModel model = new TheModel(rows, columnName);
//            TableSP.setModel(model);
//            TableSP.setRowHeight(120);
//            TableSP.getColumnModel().getColumn(5).setPreferredWidth(150);
//        } catch (Exception e) {
//            DialogHelper.alert(this, "Lỗi fill table");
//            System.out.println(e);
//        }
//    }

//    void fillcomboboxLoai() {
//        DefaultComboBoxModel model = (DefaultComboBoxModel) cbxLoai.getModel();
//        model.removeAllElements();
//        List<Loai> list = daoloai.selectAll();
//        for (Loai kh : list) {
//            model.addElement(kh);
//        }
//    }
    void chonAnh() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            ThuVien.Xlmage.save(file);//lưu hình vào thư mục logo
            ImageIcon icon = ThuVien.Xlmage.read(file.getName());//đọc hình ảnh từ logo
            lblhinhAnh.setIcon(icon);
            lblhinhAnh.setToolTipText(file.getName());//giữ tên hình tooltip
        }
    }

    public void Insert() {
        SanPham sp = getForm();
        List<SanPham> list = daosp.selectAll();
        System.out.println("đã chạy tới dao");
        try {
            daosp.insert(sp);
            System.out.println("đã chạy tới insert");
            DialogHelper.alert(this, "Thêm SP thành công");
            filltable();
        } catch (Exception e) {
        }
    }

    public void filltable() {
        MyQuery mq = new MyQuery();
        ArrayList<Product2> list = mq.BindTable();
        String[] columnName = {"MaSP", "TenSP", "Gia", "MaLoai", "MoTa", "HinhAnh"};
        Object[][] rows = new Object[list.size()][6];
        for (int i = 0; i < list.size(); i++) {
            rows[i][0] = list.get(i).getMaSP();
            rows[i][1] = list.get(i).getTenSP();
            rows[i][2] = list.get(i).getGia();
            rows[i][3] = list.get(i).getMaLoai();
            rows[i][4] = list.get(i).getMoTa();
            if (list.get(i).getHinhanh() != null) {
                ImageIcon image = new ImageIcon(new ImageIcon(list.get(i).getHinhanh()).getImage()
                        .getScaledInstance(150, 120, Image.SCALE_SMOOTH));
                System.out.println(list.get(i).getHinhanh().toString());
                rows[i][5] = image;
            } else {
                rows[i][5] = null;
            }
            //    rows[i][5] = list.get(i).getCatID();
        }
        TheModel model = new TheModel(rows, columnName);
        TableSP.setModel(model);
        TableSP.setRowHeight(120);
        TableSP.getColumnModel().getColumn(5).setPreferredWidth(150);
    }

}
